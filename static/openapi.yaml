openapi: 3.0.3
info:
  title: Test System - OpenAPI 3.0
  description: |-
    This is a Test System API based on the OpenAPI 3.0 specification.
  version: 1.0.11
servers:
  - url: http://testapi.local:8020
tags:
  - name: user
    description: Work with users
  - name: group
    description: Work with groups of students
  - name: test
    description: Work with tests
  - name: course
    description: Work with couses - groups of tests
  - name: question
    description: Work with questions in tests
  - name: answer
    description: Work with answers in questions
paths:
  /user:
    get:
      tags:
        - user
      summary: Find all users
      operationId: get_user
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data: 
                    type: array
                    items:
                      $ref: '#/components/schemas/user'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
    post:
      tags:
        - user
      summary: Create new user  
      operationId: post_user
      requestBody:
        description: Created user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_without_id'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error - Wrong groupid or role
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /user/{userid}:
    get:
      tags:
        - user
      summary: Find user by userid
      operationId: get_user_index
      parameters:
        - name: userid
          in: path
          description: Id of user
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/user'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
    put:
      tags:
        - user
      summary: Update user by userid
      operationId: put_user_index
      parameters:
        - name: userid
          in: path
          description: Id of user
          required: true
          schema:
            type: integer
      requestBody:
        description: Updated user or some user attributes
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_without_id'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error - Wrong groupid or role
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
    delete:
      tags:
        - user
      summary: Delete user by userid
      operationId: delete_user_index
      parameters:
        - name: userid
          in: path
          description: Id of user
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /user/{userid}/login:
    post:
      tags:
        - user
      summary: User registration  
      operationId: login
      parameters:
        - name: userid
          in: path
          description: Id of user
          required: true
          schema:
            type: integer
      requestBody:
        description: New user login and password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/profile'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /user/signin:
    post:
      tags:
        - user
      summary: User authorisation
      operationId: signin
      requestBody:
        description: User login and password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/profile'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error - Wrong login or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /user/signout:
    post:
      tags:
        - user
      summary: Temporary user signout 
      operationId: signout
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error - Wrong login or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /group:
    get:
      tags:
        - group
      summary: Find all groups
      operationId: get_group
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data: 
                    type: array
                    items:
                      $ref: '#/components/schemas/group'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
    post:
      tags:
        - group
      summary: Create new group
      operationId: post_group
      requestBody:
        description: Created group
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group_without_id'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /group/{groupid}:
    get:
      tags:
        - group
      summary: Find group by groupid
      operationId: get_group_index
      parameters:
        - name: groupid
          in: path
          description: Id of group
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/group'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
    put:
      tags:
        - group
      summary: Update group by groupid
      operationId: put_group_index
      parameters:
        - name: groupid
          in: path
          description: Id of group
          required: true
          schema:
            type: integer
      requestBody:
        description: Updated group or some group attributes
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group_without_id'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
    delete:
      tags:
        - group
      summary: Delete group by groupid
      operationId: delete_group_index
      parameters:
        - name: groupid
          in: path
          description: Id of group
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /group/{groupid}/student:
    get:
      tags:
        - group
      summary: Find all students of group
      operationId: get_group_index_student
      parameters:
        - name: groupid
          in: path
          description: Id of group
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/user'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /test:
    get:
      tags:
        - test
      summary: Find all tests
      operationId: get_test
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data: 
                    type: array
                    items:
                      $ref: '#/components/schemas/test'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
    post:
      tags:
        - test
      summary: Create new test
      operationId: post_test
      requestBody:
        description: Created test
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/test_without_id'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error - Wrong courseid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /test/{testid}:
    get:
      tags:
        - test
      summary: Find test by testid
      operationId: get_test_index
      parameters:
        - name: testid
          in: path
          description: Id of test
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/test'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
    put:
      tags:
        - test
      summary: Update test by testid
      operationId: put_test_index
      parameters:
        - name: testid
          in: path
          description: Id of test
          required: true
          schema:
            type: integer
      requestBody:
        description: Updated test or some test attributes
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/test_without_id'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error - Wrong courseid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
    delete:
      tags:
        - test
      summary: Delete test by testid
      operationId: delete_test_index
      parameters:
        - name: testid
          in: path
          description: Id of test
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /test/{testid}/generate/{seed}:
    post:
      tags:
        - test
      summary: Generate test - questions and answers
      operationId: generate_test
      parameters:
        - name: testid
          in: path
          description: Id of test
          required: true
          schema:
            type: integer
        - name: seed
          in: path
          description: Seed for generating (optional)
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        example: "Название теста"
                      courseid:
                        type: integer
                        example: 2
                      number:
                        type: integer
                        example: 1
                      questions:
                        type: array
                        items:
                          $ref: '#/components/schemas/question_with_answers'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /test/{testid}/check/{seed}:
    post:
      tags:
        - test
      summary: Check answers in questions of test and counting score
      operationId: check_test
      parameters:
        - name: testid
          in: path
          description: Id of test
          required: true
          schema:
            type: integer
        - name: seed
          in: path
          description: Seed for generating (optional)
          required: true
          schema:
            type: integer
      requestBody:
        description: Correct answers in user opinion - "answerid" for "radio" or "checkbox" type and "content" for "text" type
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  questionid:
                    type: integer
                    example: 1
                  answers:
                    type: array
                    items:
                      type: object
                      properties:
                        answerid:
                          type: integer
                          example: 1
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      score:
                        type: integer
                        example: 2
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /course:
    get:
      tags:
        - course
      summary: Find all courses
      operationId: get_course
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data: 
                    type: array
                    items:
                      $ref: '#/components/schemas/course'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
    post:
      tags:
        - course
      summary: Create new course
      operationId: post_course
      requestBody:
        description: Created course
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/course_without_id'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /course/{courseid}:
    get:
      tags:
        - course
      summary: Find course by courseid
      operationId: get_course_index
      parameters:
        - name: courseid
          in: path
          description: Id of course
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/course'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
    put:
      tags:
        - course
      summary: Update course by courseid
      operationId: put_course_index
      parameters:
        - name: courseid
          in: path
          description: Id of course
          required: true
          schema:
            type: integer
      requestBody:
        description: Updated course or some course attributes
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/course_without_id'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
    delete:
      tags:
        - course
      summary: Delete course by courseid
      operationId: delete_course_index
      parameters:
        - name: courseid
          in: path
          description: Id of course
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /course/{courseid}/test:
    get:
      tags:
        - course
      summary: Find all tests of course
      operationId: get_course_index_student
      parameters:
        - name: courseid
          in: path
          description: Id of course
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/test'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /question:
    get:
      tags:
        - question
      summary: Find all questions
      operationId: get_question
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data: 
                    type: array
                    items:
                      $ref: '#/components/schemas/question'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
    post:
      tags:
        - question
      summary: Create new question
      operationId: post_question
      requestBody:
        description: Created question
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/question_without_id'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error - Wrong testid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /question/{questionid}:
    get:
      tags:
        - question
      summary: Find question by questionid
      operationId: get_question_index
      parameters:
        - name: questionid
          in: path
          description: Id of question
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/question'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
    put:
      tags:
        - question
      summary: Update question by questionid
      operationId: put_question_index
      parameters:
        - name: questionid
          in: path
          description: Id of question
          required: true
          schema:
            type: integer
      requestBody:
        description: Updated question or some question attributes
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/question_without_id'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error - Wrong testid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
    delete:
      tags:
        - question
      summary: Delete question by questionid
      operationId: delete_question_index
      parameters:
        - name: questionid
          in: path
          description: Id of question
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /question/{questionid}/generate/{seed}:
    post:
      tags:
        - question
      summary: Generate quesion and answers
      operationId: generate_question
      parameters:
        - name: questionid
          in: path
          description: Id of question
          required: true
          schema:
            type: integer
        - name: seed
          in: path
          description: Seed for generating (optional)
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/question_with_answers'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /question/{questionid}/check/{seed}:
    post:
      tags:
        - question
      summary: Check answers in question and counting score
      operationId: check_question
      parameters:
        - name: questionid
          in: path
          description: Id of question
          required: true
          schema:
            type: integer
        - name: seed
          in: path
          description: Seed for generating (optional)
          required: true
          schema:
            type: integer
      requestBody:
        description: Correct answers in user opinion - "answerid" for "radio" or "checkbox" type and "content" for "text" type
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  answerid:
                    type: integer
                    example: 1
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      score:
                        type: integer
                        example: 2
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /answer:
    get:
      tags:
        - answer
      summary: Find all answers
      operationId: get_answer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data: 
                    type: array
                    items:
                      $ref: '#/components/schemas/answer'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
    post:
      tags:
        - answer
      summary: Create new answer
      operationId: post_answer
      requestBody:
        description: Created answer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/answer_without_id'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error - Wrong testid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /answer/{answerid}:
    get:
      tags:
        - answer
      summary: Find answer by answerid
      operationId: get_answer_index
      parameters:
        - name: answerid
          in: path
          description: Id of answer
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/answer'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
    put:
      tags:
        - answer
      summary: Update answer by answerid
      operationId: put_answer_index
      parameters:
        - name: answerid
          in: path
          description: Id of answer
          required: true
          schema:
            type: integer
      requestBody:
        description: Updated answer or some answer attributes
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/answer_without_id'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error - Wrong testid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
    delete:
      tags:
        - answer
      summary: Delete answer by answerd
      operationId: delete_answer_index
      parameters:
        - name: answerid
          in: path
          description: Id of answer
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: No authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Wrong authorisation key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
components:
  schemas:
    400:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error: 
          type: object
          properties:
            code:
              type: integer
              example: 400
            message:
              type: integer
              example: Bad Request
    401:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error: 
          type: object
          properties:
            code:
              type: integer
              example: 401
            message:
              type: integer
              example: Unauthorised
    403:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error: 
          type: object
          properties:
            code:
              type: integer
              example: 403
            message:
              type: integer
              example: Forbidden
    500:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error: 
          type: object
          properties:
            code:
              type: integer
              example: 500
            message:
              type: integer
              example: Internal Server Error
    user:
      type: object
      properties:
        userid:
          type: integer
          example: 1
        name:
          type: string
          example: Николаев Павел Максимович
        groupid:
          type: integer
          example: 1
        role:
          type: string
          example: student
    user_without_id:
      type: object
      properties:
        name:
          type: string
          example: Николаев Павел Максимович
        groupid:
          type: integer
          example: 1
        role:
          type: string
          example: student
    group:
      type: object
      properties:
        groupid:
          type: integer
          example: 1
        name:
          type: string
          example: ИКБО-18-20
    group_without_id:
      type: object
      properties:
        name:
          type: string
          example: ИКБО-18-20
    course:
      type: object
      properties:
        courseid:
          type: integer
          example: 1
        name:
          type: string
          example: Первый курс
    course_without_id:
      type: object
      properties:
        name:
          type: string
          example: Первый курс
    test:
      type: object
      properties:
        testid:
          type: integer
          example: 1
        name:
          type: string
          example: Первый тест
        courseid:
          type: integer
          example: 1
        number:
          type: integer
          example: 1
    test_without_id:
      type: object
      properties:
        name:
          type: string
          example: Первый тест
        courseid:
          type: integer
          example: 1
        number:
          type: integer
          example: 1
    question:
      type: object
      properties:
        questionid:
          type: integer
          example: 1
        name:
          type: string
          example: Первый вопрос
        testid:
          type: integer
          example: 1
        content:
          type: string
          example: Содержание вопроса
        type:
          type: string
          example: radio
    question_without_id:
      type: object
      properties:
        name:
          type: string
          example: Первый вопрос
        testid:
          type: integer
          example: 1
        content:
          type: string
          example: Содержание вопроса
        type:
          type: string
          example: radio
    answer:
      type: object
      properties:
        answerid:
          type: integer
          example: 1
        questionid:
          type: integer
          example: 1
        content:
          type: string
          example: Ответ
        correct:
          type: boolean
          example: true
    answer_without_id:
      type: object
      properties:
        questionid:
          type: integer
          example: 1
        content:
          type: string
          example: Ответ
        correct:
          type: boolean
          example: true
    question_with_answers:
      type: object
      properties:
        name:
          type: string
          example: "Вопрос"
        content:
          type: string
          example: "Содержание вопроса"
        type:
          type: string
          example: "radio"
        answers:
          type: array
          items:
            type: object
            properties:
              answerid:
                type: integer
                example: 1
              content:
                type: string
                example: "Один из ответов на вопрос"
    profile:
      type: object
      properties:
        login:
          type: string
          example: "user"
        password:
          type: string
          example: "user"
  requestBodies:
    user:
      description: User object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/user'